#+TITLE: My Emacs Configuration
#+PROPERTY: header-args :tangle config.el

** INFO

create source blocks with ~org-insert-structure-template~ Keybinding: ~(C-c C-,)~
~C-c C-c~ on tangle header activates it if it isn't working.

** Package management
Uses straight for fast lazy loading with use-package automatically using straight
This I will keep in the init.el for now though so it loads first.

** Basic changes
#+begin_src emacs-lisp
  ;; Don't show the splash screen
  (setq inhibit-startup-message t)

  ;; change the look
  (tool-bar-mode -1) ; remove tool bar
  (scroll-bar-mode -1) ; remove scroll bar
  (global-display-line-numbers-mode 1)
  (set-face-attribute 'default nil :height 170) ;;(height / 10 = normal font)

  ;; enable recent files
  (recentf-mode 1)
  (setq recentf-max-menu-items 25)
  (setq recentf-max-saved-items 25)

  ;;(setq org-src-preserve-indentation t)
#+end_src

** Theme
#+begin_src emacs-lisp 
  ;; theme
  (use-package doom-themes)
  (load-theme 'doom-moonlight t)
#+end_src

** evil vim
#+begin_src emacs-lisp 
  ;; ======== https://github.com/emacs-evil/evil
  ;; evil vim
  ;; ========
(use-package evil
     :init (setq evil-want-C-i-jump nil)
     :config (evil-mode))

  ;; required packages
  (use-package goto-chg)
  (require 'evil)
  (evil-mode 1)

#+end_src

** Ivy (completion)
#+begin_src emacs-lisp
  ;; Ivy (completion) https://github.com/abo-abo/swiper
  (use-package ivy)
  (use-package counsel)
  (ivy-mode)
  (counsel-mode)
#+end_src

** vterm
#+begin_src emacs-lisp
   (use-package vterm
   :ensure t)
  ;; ensure that vterm has no line numbers


  (add-hook 'vterm-mode-hook (lambda() (display-line-numbers-mode -1))) 
#+end_src

** magit
#+begin_src emacs-lisp
    (use-package magit)
#+end_src

** Personal functions
#+begin_src emacs-lisp
  ;; personal functions
  (defun reload-config ()
    (interactive)
    (load-file "~/.emacs.d/init.el"))

  (defun edit-config ()
    (interactive
    (find-file "~/.emacs.d/config.org")))
#+end_src

** which key
#+begin_src emacs-lisp
  ;; ========= https://github.com/justbur/emacs-which-key
  ;; which key
  ;; =========
  (use-package which-key)
  (require 'which-key)
  (which-key-mode)
#+end_src

** Windswap
#+begin_src emacs-lisp
  ;; Windswap
  (use-package windswap)
  (windmove-default-keybindings 'control)
  (windswap-default-keybindings 'control 'shift)
  ; basically ctrl direction moves to that window, with shift moves that window there
#+end_src

** Keybindings
#+begin_src emacs-lisp
  ;; new keybindings
  (use-package general
    :after evil
    :config
    (general-override-mode)
    )
  (require 'general)

  (general-create-definer my-leader-def
    :states '(normal motion)
    :keymaps 'override
    :prefix "SPC"
    )

  ;; magit uses emacs mode so emacs is important to override magit
  (my-leader-def
    :states '(emacs normal)
    :keymaps 'override
    ;; files
    "f s" 'save-buffer
    "." 'find-file
    "f r" 'recentf-open
    ;; window commands
    "w d" 'evil-window-delete
    "w H" 'evil-window-split 
    "w v" 'evil-window-vsplit
    "w j" 'evil-window-up
    "w k" 'evil-window-down
    "w h" 'evil-window-left
    "w l" 'evil-window-right
    ;; config commands
    "c r" 'reload-config
    "c e" 'edit-config
    ;; vterm
    "o t" 'vterm-other-window
    "g g" 'magit-status
    "g d" 'magit-dispatch
    "g f" 'magit-file-dispatch
    )

  ;; change which key description
  (which-key-add-key-based-replacements
    "SPC f" "files")
  (which-key-add-key-based-replacements
    "SPC c" "config")
  (which-key-add-key-based-replacements
    "SPC w" "window")
  (which-key-add-key-based-replacements
    "SPC o" "vterm")
#+end_src

;;; Local Variables: ***
;;; eval: (add-hook 'after-save-hook #'org-babel-tangle nil t) ***
;;; End: ***
